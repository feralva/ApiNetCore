// <auto-generated />
using System;
using Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace Data.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20200603194342_estadoVisita")]
    partial class estadoVisita
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("DireccionId")
                        .HasColumnName("Direccion_FK")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableEmpresaId")
                        .HasColumnName("Responsable_Empresa_FK")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DireccionId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ResponsableEmpresaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Data.Entities.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Partido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("Data.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnName("Correo_Electronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnName("Usuario_FK")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("urlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Data.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("DireccionId")
                        .HasColumnName("Direccion_FK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableEmpresaId")
                        .HasColumnName("Responsable_Empresa_FK")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DireccionId");

                    b.HasIndex("ResponsableEmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Data.Entities.EquipoMedicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEquipoMedicionId")
                        .HasColumnName("Tipo_Equipo_Medicion_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoEquipoMedicionId");

                    b.ToTable("Equipo_Medicion");
                });

            modelBuilder.Entity("Data.Entities.Establecimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnName("Cliente_FK")
                        .HasColumnType("int");

                    b.Property<int>("DireccionId")
                        .HasColumnName("Direccion_FK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DireccionId");

                    b.ToTable("Establecimiento");
                });

            modelBuilder.Entity("Data.Entities.EstadoIrregularidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estado_Irregularidad");
                });

            modelBuilder.Entity("Data.Entities.EstadoLicencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estado_Licencia");
                });

            modelBuilder.Entity("Data.Entities.EstadoPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descipcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoPlan");
                });

            modelBuilder.Entity("Data.Entities.EstadoVisita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoVisita");
                });

            modelBuilder.Entity("Data.Entities.Evidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IrregularidadId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IrregularidadId");

                    b.ToTable("Evicencia");
                });

            modelBuilder.Entity("Data.Entities.Irregularidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnName("Estado_FK")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnName("Tipo_FK")
                        .HasColumnType("int");

                    b.Property<int>("UbicacionId")
                        .HasColumnName("Ubicacion_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Irregularidad");
                });

            modelBuilder.Entity("Data.Entities.Licencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnName("Estado_FK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnName("Fecha_Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnName("Fecha_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("PagoId")
                        .HasColumnName("Pago_FK")
                        .HasColumnType("int");

                    b.Property<int>("TipoLicenciaId")
                        .HasColumnName("Tipo_Licencia_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PagoId");

                    b.HasIndex("TipoLicenciaId");

                    b.ToTable("Licencia");
                });

            modelBuilder.Entity("Data.Entities.MedioPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedioPago");
                });

            modelBuilder.Entity("Data.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<int>("MedioPagoId")
                        .HasColumnName("Medio_Pago_FK")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MedioPagoId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Data.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnName("Cliente_FK")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnName("Empleado_Creador_FK")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("Empresa_FK")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnName("Estado_FK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoPlanId")
                        .HasColumnName("Tipo_Plan_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoPlanId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("Data.Entities.PlanEstablecimiento", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnName("Plan_FK")
                        .HasColumnType("int");

                    b.Property<int>("EstablecimientoId")
                        .HasColumnName("Establecimiento_FK")
                        .HasColumnType("int");

                    b.HasKey("PlanId", "EstablecimientoId");

                    b.HasIndex("EstablecimientoId");

                    b.ToTable("Plan_Establecimiento");
                });

            modelBuilder.Entity("Data.Entities.ResponsableEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnName("Correo_Electronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responsable_Empresa");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.Familia", b =>
                {
                    b.Property<string>("IdFamilia")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia")
                        .HasName("PK__Familia__751F80CFB2BE0BA2");

                    b.ToTable("Familia","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.FamiliaFamilia", b =>
                {
                    b.Property<string>("IdFamilia")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("IdFamiliaHijo")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia", "IdFamiliaHijo")
                        .HasName("PK__Familia___ABFCC67E4660EA48");

                    b.HasIndex("IdFamiliaHijo");

                    b.ToTable("Familia_Familia","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.FamiliaPatente", b =>
                {
                    b.Property<string>("IdFamilia")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("IdPatente")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia", "IdPatente")
                        .HasName("PK__FamiliaE__166FEEA61367E606");

                    b.HasIndex("IdPatente");

                    b.ToTable("Familia_Patente","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.Patente", b =>
                {
                    b.Property<string>("IdPatente")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdPatente")
                        .HasName("PK__Patente__9F4EF95C6B5370D7");

                    b.ToTable("Patente","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Contraseña")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF9736E01C24");

                    b.ToTable("Usuario","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.UsuarioFamilia", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("IdFamilia")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdUsuario", "IdFamilia")
                        .HasName("PK__Usuario___BC34479B236F871A");

                    b.HasIndex("IdFamilia");

                    b.ToTable("Usuario_Familia","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.Seguridad.UsuarioPatente", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("IdPatente")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdUsuario", "IdPatente");

                    b.HasIndex("IdPatente");

                    b.ToTable("Usuario_Patente","Seguridad");
                });

            modelBuilder.Entity("Data.Entities.TipoEquipoMedicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Equipo_Medicion");
                });

            modelBuilder.Entity("Data.Entities.TipoIrregularidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Irregularidad");
                });

            modelBuilder.Entity("Data.Entities.TipoLicencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cantidad_Maxima_Usuarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Licencia");
                });

            modelBuilder.Entity("Data.Entities.TipoPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPlan");
                });

            modelBuilder.Entity("Data.Entities.TipoVisita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoVisita");
                });

            modelBuilder.Entity("Data.Entities.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstablecimientoId")
                        .HasColumnName("Establecimiento_FK")
                        .HasColumnType("int");

                    b.Property<Point>("Location")
                        .HasColumnType("geometry");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstablecimientoId");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("Data.Entities.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("AnioPactado")
                        .HasColumnName("Anio_Pactado")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnName("Empleado_FK")
                        .HasColumnType("int");

                    b.Property<int>("EstablecimientoId")
                        .HasColumnName("Establecimiento_FK")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnName("Estado_FK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesPactado")
                        .HasColumnName("Mes_Pactado")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnName("Plan_FK")
                        .HasColumnType("int");

                    b.Property<int>("TipoVisitaId")
                        .HasColumnName("Tipo_Visita_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstablecimientoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PlanId");

                    b.HasIndex("TipoVisitaId");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("Data.Entities.Cliente", b =>
                {
                    b.HasOne("Data.Entities.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.ResponsableEmpresa", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Empleado", b =>
                {
                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany("Empleados")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Seguridad.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Data.Entities.Empresa", b =>
                {
                    b.HasOne("Data.Entities.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.ResponsableEmpresa", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.EquipoMedicion", b =>
                {
                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany("EquiposMedicion")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.TipoEquipoMedicion", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoEquipoMedicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Establecimiento", b =>
                {
                    b.HasOne("Data.Entities.Cliente", null)
                        .WithMany("Establecimientos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Evidencia", b =>
                {
                    b.HasOne("Data.Entities.Irregularidad", null)
                        .WithMany("UrlsEvidencias")
                        .HasForeignKey("IrregularidadId");
                });

            modelBuilder.Entity("Data.Entities.Irregularidad", b =>
                {
                    b.HasOne("Data.Entities.EstadoIrregularidad", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.TipoIrregularidad", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Ubicacion", "Ubicacion")
                        .WithMany("Irregularidades")
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Licencia", b =>
                {
                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.EstadoLicencia", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.TipoLicencia", "TipoLicencia")
                        .WithMany()
                        .HasForeignKey("TipoLicenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Pago", b =>
                {
                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany("Pagos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.MedioPago", "MedioPago")
                        .WithMany()
                        .HasForeignKey("MedioPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Plan", b =>
                {
                    b.HasOne("Data.Entities.Cliente", "Cliente")
                        .WithMany("Planes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.EstadoPlan", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.TipoPlan", "TipoPlan")
                        .WithMany()
                        .HasForeignKey("TipoPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.PlanEstablecimiento", b =>
                {
                    b.HasOne("Data.Entities.Establecimiento", "Establecimiento")
                        .WithMany("PlanesEstablecimientos")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Plan", "Plan")
                        .WithMany("PlanesEstablecimientos")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Seguridad.FamiliaFamilia", b =>
                {
                    b.HasOne("Data.Entities.Seguridad.Familia", "IdFamiliaNavigation")
                        .WithMany("FamiliaFamiliaIdFamiliaNavigation")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK__Familia_F__IdFam__300424B4")
                        .IsRequired();

                    b.HasOne("Data.Entities.Seguridad.Familia", "IdFamiliaHijoNavigation")
                        .WithMany("FamiliaFamiliaIdFamiliaHijoNavigation")
                        .HasForeignKey("IdFamiliaHijo")
                        .HasConstraintName("FK__Familia_A__Famil__37A5467C")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Seguridad.FamiliaPatente", b =>
                {
                    b.HasOne("Data.Entities.Seguridad.Familia", "IdFamiliaNavigation")
                        .WithMany("FamiliaPatente")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK_Familia_Patente_Familia")
                        .IsRequired();

                    b.HasOne("Data.Entities.Seguridad.Patente", "IdPatenteNavigation")
                        .WithMany("FamiliaPatente")
                        .HasForeignKey("IdPatente")
                        .HasConstraintName("FK_FamiliaElement_Patente")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Seguridad.UsuarioFamilia", b =>
                {
                    b.HasOne("Data.Entities.Seguridad.Familia", "IdFamiliaNavigation")
                        .WithMany("UsuarioFamilia")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK__Usuario_P__Famil__35BCFE0A")
                        .IsRequired();

                    b.HasOne("Data.Entities.Seguridad.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioFamilia")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Usuario_F__IdUsu__33D4B598")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Seguridad.UsuarioPatente", b =>
                {
                    b.HasOne("Data.Entities.Seguridad.Patente", "IdPatenteNavigation")
                        .WithMany("UsuarioPatente")
                        .HasForeignKey("IdPatente")
                        .HasConstraintName("FK_Usuario_Patente_Patente")
                        .IsRequired();

                    b.HasOne("Data.Entities.Seguridad.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioPatente")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Usuario_Patente_Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Ubicacion", b =>
                {
                    b.HasOne("Data.Entities.Establecimiento", "Establecimiento")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Visita", b =>
                {
                    b.HasOne("Data.Entities.Empleado", "Empleado")
                        .WithMany("Visitas")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Establecimiento", "Establecimiento")
                        .WithMany()
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.EstadoVisita", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Plan", "Plan")
                        .WithMany("Visitas")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.TipoVisita", "TipoVisita")
                        .WithMany()
                        .HasForeignKey("TipoVisitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
